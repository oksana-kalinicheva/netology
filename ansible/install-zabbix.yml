---
- hosts: zabbix
  become: true
  vars:
    password_db: zabbix
  tasks:
    - name: Install packages
      apt:
        state: present
        name:
          - tcsh
          - htop

    - name: Create a directory
      ansible.builtin.file:
        path: /etc/zabbix-files
        state: directory
        mode: "0755"

    - name: Download the Zabbix files
      ansible.builtin.get_url:
        url: "https://repo.zabbix.com/zabbix/7.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_latest+ubuntu22.04_all.deb"
        dest: /etc/zabbix-files/zabbix-release_latest+ubuntu22.04_all.deb

    - name: Install the Zabbix package
      ansible.builtin.apt:
        deb: /etc/zabbix-files/zabbix-release_latest+ubuntu22.04_all.deb

    - name: Update apt packages
      apt:
        force_apt_get: true
        update_cache: yes
        upgrade: dist

    - name: Install Zabbix frontend, agent and server
      ansible.builtin.apt:
        name:
          - zabbix-server-mysql
          - zabbix-frontend-php
          - zabbix-nginx-conf
          - zabbix-sql-scripts
          - zabbix-agent

    - name: Install MySQL and Python packages
      ansible.builtin.apt:
        name:
          - mysql-server
          - python3-pip
          - libmysqlclient-dev
          - python3-dev
          - python3-mysqldb
        state: present

    - name: Enable and start MySQL service
      ansible.builtin.systemd:
        name: mysql
        enabled: true
        state: restarted

    - name: Create MySQL user zabbix and password
      community.mysql.mysql_user:
        name: zabbix
        password: "{{ password_db }}"
        priv: "*.*:ALL,GRANT"
        state: present

    - name: Create MySQL database
      community.mysql.mysql_db:
        name: zabbix
        encoding: utf8mb4
        collation: utf8mb4_bin
        state: present

    - name: Check for server.sql
      stat:
        path: /usr/share/zabbix-sql-scripts/mysql/server.sql
      register: result

    - name: Extract server.sql from .gz
      ansible.builtin.command:
        cmd: gunzip /usr/share/zabbix-sql-scripts/mysql/server.sql.gz
      when: not result.stat.exists

    - name: Import preset (will not be executed if server.sql existed before extracting)
      community.mysql.mysql_db:
        name: zabbix
        state: import
        target: /usr/share/zabbix-sql-scripts/mysql/server.sql
      when: not result.stat.exists

    - name: Set new database password for MySQL database
      ansible.builtin.lineinfile:
        path: /etc/zabbix/zabbix_server.conf
        insertafter: "DBPassword="
        line: "DBPassword={{ password_db }}"

    - name: Set PHP port
      ansible.builtin.shell: |
        sed -i 's/#        listen          8080;/        listen          8080;/g' /etc/zabbix/nginx.conf

    - name: Set PHP server address
      ansible.builtin.shell: |
        sed -i 's/#        server_name     example.com;/        server_name     zabbix.example.com;/g' /etc/zabbix/nginx.conf

    - name: Enable and restart Zabbix server
      ansible.builtin.systemd:
        name: zabbix-server
        enabled: true
        state: restarted

    - name: Enable and restart Zabbix agent
      ansible.builtin.systemd:
        name: zabbix-agent
        enabled: true
        state: restarted

    - name: Enable and restart Nginx
      ansible.builtin.systemd:
        name: nginx
        enabled: true
        state: restarted

    - name: Enable and restart PHP-FPM
      ansible.builtin.systemd:
        name: php8.1-fpm
        enabled: true
        state: restarted